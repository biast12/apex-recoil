#include <Mouse.h>
#include <Arduino.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

float scale = 1.0;
const int invert = 1;  // Or -1.
const int BTN_1 = 4;
const int BTN_2 = 10;
const int MAX_LENGTH = 55;

String name;
float mx[MAX_LENGTH];
float my[MAX_LENGTH];
float mt[MAX_LENGTH];
int n;
int current_recoil = 2;

// Generated by processing/convert_to_arduino_mouse.ipynb
#include "recoil.inc"

LiquidCrystal_I2C lcd(0x27, 16, 2);

float read_x(int r, int n) {
  return pgm_read_float(XDATA + (r * MAX_LENGTH + n));
}

float read_y(int r, int n) {
  return pgm_read_float(YDATA + (r * MAX_LENGTH + n));
}

uint32_t read_t(int r, int n) {
  return pgm_read_float(TDATA + (r * MAX_LENGTH + n));
}

void load_recoil() {
  n = sizes[current_recoil];
  name = names[current_recoil];
  for (int i = 0; i < n; i++) {
    mx[i] = read_x(current_recoil, i);
    my[i] = read_y(current_recoil, i);
    mt[i] = read_t(current_recoil, i);
  }
}

void print_current() {
  lcd.home();
  lcd.clear();
  lcd.print(name);
  lcd.setCursor(0, 1);
  lcd.print(String("mag ") + String(n));
}

void setup() {
  lcd.init();
  lcd.backlight();

  load_recoil();
  print_current();

  pinMode(BTN_1, INPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  digitalWrite(5, HIGH);
  digitalWrite(6, LOW);

  pinMode(BTN_2, INPUT);
  pinMode(8, OUTPUT);
  digitalWrite(8, LOW);
  pinMode(9, OUTPUT);
  digitalWrite(9, HIGH);

  Mouse.begin();
}

long start_time = 0;
bool shooting = false;
long idx = 0; // Index of the point we currently moving from;
long mouse_x = 0;
long mouse_y = 0;
long signals = 0;

void move() {
  long t = millis() - start_time;
  int last_progress = (idx * 17  / (n - 1));
  while (idx + 1 < n && mt[idx + 1] <= t) {
    idx++;
  }
  int progress = (idx * 17 / (n - 1));
  while (progress > last_progress) {
    last_progress++;
    lcd.print(char(0b11111111));
  }
  if (idx + 1 >= n) {
    shooting = false;
    print_current();

    delay(50);
    Mouse.release(MOUSE_LEFT);
    delay(10);
    Mouse.release(MOUSE_RIGHT);
    return;
  }
  float p = (1.0 * (t - mt[idx])) / (mt[idx + 1] - mt[idx]);
  if (p < 0) p = 0;
  if (p > 1) p = 1;
  long x = -round(scale * (mx[idx] + p * (mx[idx + 1] - mx[idx])));
  long y = - invert * round(scale * (my[idx] + p * (my[idx + 1] - my[idx])));
  if (x != mouse_x || y != mouse_y) {
    // Serial.println(String(t) + " " + String(p) + ": (" + String(x) + "," + String(y)  + ") d (" + String(x - mouse_x) + "," + String(y - mouse_y) + ")");
    Mouse.move(x - mouse_x, y - mouse_y, 0);
    signals++;
    mouse_x = x;
    mouse_y = y;
  }
}

const float circle_speed = 3 * 2 * 3.141 / 1000;
const float radius = 40.0;

int scale_modifer = 0;

void loop() {
    if (shooting) {
      move();
      return;
    }
    if (digitalRead(BTN_1) == HIGH) {
      lcd.clear();
      lcd.home();
      lcd.print("running..");
      lcd.setCursor(0,1);
      shooting = true;
      idx = 0;
      mouse_x = 0;
      mouse_y = 0;
      signals = 0;
      Mouse.press(MOUSE_RIGHT);
      delay(700);
      Mouse.press(MOUSE_LEFT);
      start_time = millis();
    }
    if (digitalRead(BTN_2) == HIGH) {
      current_recoil = (current_recoil + 1) % RECOILS_LENGTH;
      load_recoil();
      print_current();
      delay(1000);
    }
}